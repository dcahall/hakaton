version: '3'
 
services:
  frontend:
    build:
      context: ./frontend
    restart: always
    command: >
      sh -c "npm start"
    #    volumes:
    #      - ./frontend:/app
    ports:
      - "3000:3000"

  auth:
    build:
      context: ./services/auth
    restart: always
    command: >
      sh -c "pipenv run python3 utils/wait_for_db.py &&
             pipenv run python3 utils/init_db.py &&
             pipenv run python3 run.py"
    volumes:
      - ./services/auth:/app
      - ./services/utils:/app/utils
    ports:
      - "2223:2223"
    env_file:
      - ./.env
    depends_on:
      - db

  learning:
    build:
      context: ./services/learning
    restart: always
    command: >
      sh -c "pipenv run python3 utils/wait_for_db.py &&
             pipenv run python3 run.py"
    volumes:
      - ./services/learning:/app
      - ./services/utils:/app/utils
    ports:
      - "2225:2225"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis


  load_data:
    build:
      context: ./services/load_data
    restart: always
    command: >
      sh -c "pipenv run python3 utils/wait_for_db.py &&
             pipenv run python3 run.py"
    volumes:
      - ./services/load_data:/app
      - ./services/utils:/app/utils
    ports:
      - "2224:2224"
    env_file:
      - ./.env
    depends_on:
      - db


  upload_data:
    build:
      context: ./services/upload_data
    restart: always
    command: >
      sh -c "pipenv run python3 utils/wait_for_db.py &&
             pipenv run python3 run.py"
    volumes:
      - ./services/upload_data:/app
      - ./services/utils:/app/utils
    ports:
      - "2226:2226"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  upload_data_worker:
    build:
      context: ./services/upload_data
    restart: always
    command: >
      sh -c "pipenv run python3 utils/wait_for_db.py &&
             pipenv run rq worker default low high"
    volumes:
      - ./services/upload_data:/app
      - ./services/utils:/app/utils
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine
    restart: always

  db:
    image: postgres:14.8-alpine
    restart: always
    env_file:
      - ./.env
    # Убрать секцию ports после успешного тестирования
    ports:
      - "5432:5432"
    # Вынести данные (volumes)
